from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse
from jinja2 import Template

app = FastAPI()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏—Ö –≤–µ—Å–æ–≤
category_weights = {
    "–î–∞–Ω–Ω—ã–µ –∏ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∏–º": 40,
    "–ö–æ–º–∞–Ω–¥–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–Ω–∞–ª–∏–∑–∞": 30,
    "–ü—Ä–æ—Ü–µ—Å—Å—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": 20,
    "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": 10
}

# –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —É—Ä–æ–≤–Ω–µ–π
score_descriptions = {
    "–î–∞–Ω–Ω—ã–µ –∏ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∏–º": {
        "description": "–ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è –∫ –Ω–∏–º –≤ –∫–æ–º–ø–∞–Ω–∏–∏.",
        "subcategories": {
            "–î–æ–≤–µ—Ä–∏–µ –∫ –¥–∞–Ω–Ω—ã–º": {
                "weight": 20,
                "description": "–ö–∞–∫ –¥–∞–Ω–Ω—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞ –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏—è.",
                "levels": {
                    0: "–î–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã, —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –±–µ–∑ –∏—Ö —É—á—ë—Ç–∞.",
                    1: "–î–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –Ω–æ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ—Ç—á—ë—Ç–∞—Ö.",
                    2: "–î–∞–Ω–Ω—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ—à–µ–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞—é—Ç—Å—è –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º.",
                    3: "C-Level –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ, –Ω–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ.",
                    4: "–î–∞–Ω–Ω—ã–µ ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–∫—Ç–æ—Ä –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π, –∏—Ö —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–º–Ω–µ–Ω–∏–π."
                }
            },
            "–°–±–æ—Ä –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö": {
                "weight": 20,
                "description": "–ö–∞—á–µ—Å—Ç–≤–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–±–æ—Ä–∞ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.",
                "levels": {
                    0: "–î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è.",
                    1: "–î–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Ö–∞–æ—Ç–∏—á–Ω–æ, –Ω–µ—Ç –µ–¥–∏–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.",
                    2: "–ï—Å—Ç—å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏.",
                    3: "–°–∏—Å—Ç–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ª–∞–∂–µ–Ω–∞, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ –æ—à–∏–±–∫–∏.",
                    4: "–î–∞–Ω–Ω—ã–µ –Ω–∞–¥—ë–∂–Ω—ã, –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏, –±–µ–∑ –æ—à–∏–±–æ–∫."
                }
            }
        }
    },
    "–ö–æ–º–∞–Ω–¥–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–Ω–∞–ª–∏–∑–∞": {
        "description": "–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã.",
        "subcategories": {
            "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö": {
                "weight": 15,
                "description": "–†–æ–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.",
                "levels": {
                    0: "–ê–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ –Ω–µ—Ç.",
                    1: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –µ—Å—Ç—å, –Ω–æ –≤—ã–ø–æ–ª–Ω—è—é—Ç —Ç–æ–ª—å–∫–æ –æ—Ç—á—ë—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.",
                    2: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞—é—Ç –∏–Ω—Å–∞–π—Ç—ã, –Ω–æ –Ω–µ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π.",
                    3: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.",
                    4: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é."
                }
            },
            "–ò–Ω–∂–µ–Ω–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö": {
                "weight": 15,
                "description": "–ö–∞—á–µ—Å—Ç–≤–æ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –∫–æ–º–ø–∞–Ω–∏–∏.",
                "levels": {
                    0: "–ù–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ –¥–∞–Ω–Ω—ã–º.",
                    1: "–î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é, –Ω–µ—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.",
                    2: "–ï—Å—Ç—å –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –Ω–æ –æ–Ω–∞ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞.",
                    3: "–î–∞–Ω–Ω—ã–µ –Ω–∞–¥—ë–∂–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏.",
                    4: "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö."
                }
            }
        }
    },
    "–ü—Ä–æ—Ü–µ—Å—Å—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": {
        "description": "–ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è A/B-—Ç–µ—Å—Ç–æ–≤ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –±–∏–∑–Ω–µ—Å.",
        "subcategories": {
            "–ß–∞—Å—Ç–æ—Ç–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤": {
                "weight": 10,
                "description": "–ö–∞–∫ —á–∞—Å—Ç–æ –∏ –≤ –∫–∞–∫–æ–º –º–∞—Å—à—Ç–∞–±–µ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è A/B-—Ç–µ—Å—Ç—ã.",
                "levels": {
                    0: "–¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è.",
                    1: "–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤ –≤ –≥–æ–¥, –Ω–µ—Ç —Å–∏—Å—Ç–µ–º—ã.",
                    2: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è, –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –≤ –º–∞—Å—à—Ç–∞–±–µ.",
                    3: "A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–ª–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º.",
                    4: "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã ‚Äî –æ—Å–Ω–æ–≤–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π."
                }
            }
        }
    },
    "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": {
        "description": "–ù–∞—Å–∫–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ—Ü–µ—Å—Å A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
        "subcategories": {
            "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è A/B-—Ç–µ—Å—Ç–æ–≤": {
                "weight": 10,
                "description": "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ CI/CD.",
                "levels": {
                    0: "–¢–µ—Å—Ç—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é.",
                    1: "–ß–∞—Å—Ç–∏—á–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤, –∞–Ω–∞–ª–∏–∑ –≤—Ä—É—á–Ω—É—é.",
                    2: "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ —Ç—Ä—É–¥–∞.",
                    3: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞.",
                    4: "–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤ –≤ CI/CD, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑."
                }
            }
        }
    }
}


def calculate_maturity(scores):
    weighted_sum = 0
    total_weight = sum(category_weights.values())
    category_scores = {}
    recommendations = []
    next_steps = []
    
    for category, metrics in score_descriptions.items():
        category_weight = category_weights.get(category, 0)
        category_total = 0
        metric_count = len(metrics)
        
        for metric, details in metrics.items():
            metric_weight = details["weight"]
            metric_score = scores.get(metric, 0)
            category_total += metric_score * (metric_weight / 100)
        
        category_score = (category_total / metric_count) * category_weight
        category_scores[category] = category_score
        weighted_sum += category_score
    
    final_score = (weighted_sum / total_weight) * 100
    sorted_categories = sorted(category_scores.items(), key=lambda x: x[1])
    weakest_category, weakest_score = sorted_categories[0]
    
    if weakest_score <= 50:
        recommendations.append(f"–û—Å–Ω–æ–≤–Ω–æ–π –±–∞—Ä—å–µ—Ä: {weakest_category}. –ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —ç—Ç–æ—Ç –∞—Å–ø–µ–∫—Ç –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.")
        if weakest_category == "–î–∞–Ω–Ω—ã–µ –∏ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∏–º":
            recommendations.append("üìå –í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö (Great Expectations, Monte Carlo).")
            recommendations.append("üìå –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞—É–¥–∏—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.")
        elif weakest_category == "–ö–æ–º–∞–Ω–¥–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–Ω–∞–ª–∏–∑–∞":
            recommendations.append("üìå –û–±—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ –º–µ—Ç–æ–¥–∞–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ A/B-—Ç–µ—Å—Ç–æ–≤.")
            recommendations.append("üìå –†–∞—Å—à–∏—Ä—å—Ç–µ –∫–æ–º–∞–Ω–¥—É, –¥–æ–±–∞–≤–∏–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏–ª–∏ –¥–∞—Ç–∞-–∏–Ω–∂–µ–Ω–µ—Ä–∞.")
        elif weakest_category == "–ü—Ä–æ—Ü–µ—Å—Å—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è":
            recommendations.append("üìå –†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –µ–¥–∏–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.")
            recommendations.append("üìå –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞ —Ç–µ—Å—Ç–æ–≤ –∏ –≤–Ω–µ–¥—Ä–∏—Ç–µ –∏—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å—ã.")
        elif weakest_category == "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è":
            recommendations.append("üìå –í–Ω–µ–¥—Ä–∏—Ç–µ feature flags –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.")
            recommendations.append("üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CI/CD –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è A/B-—Ç–µ—Å—Ç–æ–≤.")
    
    if len(sorted_categories) > 1:
        next_category, next_score = sorted_categories[1]
        if next_score <= 50:
            next_steps.append(f"üöÄ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ü–æ—Å–ª–µ —É–ª—É—á—à–µ–Ω–∏—è {weakest_category}, –∑–∞–π–º–∏—Ç–µ—Å—å {next_category}.")
    
    return final_score, category_scores, recommendations, next_steps


html_template = """<html><head>
<title>–û—Ü–µ–Ω–∫–∞ –∑—Ä–µ–ª–æ—Å—Ç–∏ A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –°–∞–±–∏—Ä–æ–≤–∞ –í–ª–∞–¥–∏–º–∏—Ä–∞</title>
<style>
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&display=swap');
body {
    background-color: #FFD700;
    color: #000000;
    font-family: 'Montserrat', sans-serif;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow-y: auto;
    height: 100vh;
}
.container {
    width: 80%;
    max-width: 900px;
}
.animation-container {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 20px;
    animation: glitch 1s infinite alternate;
}
@keyframes glitch {
    0% { transform: translateX(0px); opacity: 1; text-shadow: 2px 2px #FF1493; }
    25% { transform: translateX(1px); opacity: 0.9; text-shadow: -2px -2px #00FFFF; }
    50% { transform: translateX(-1px); opacity: 0.8; text-shadow: 3px 3px #FF8C00; }
    75% { transform: translateX(2px); opacity: 0.9; text-shadow: -3px -3px #00FFEA; }
    100% { transform: translateX(0px); opacity: 1; text-shadow: 2px 2px #FF1493; }
}
details {
    margin-bottom: 10px;
}
summary {
    font-weight: bold;
    cursor: pointer;
    padding: 5px;
    background-color: transparent;
    border: none;
    font-size: 1.2em;
    text-transform: uppercase;
}
summary.subcategory {
    font-size: 1em;
    margin-left: 15px;
    color: #FF1493;
    font-weight: 600;
}
p {
    white-space: normal;
    line-height: 1.5;
    font-size: 1.1em;
    color: #222;
    font-weight: 500;
}
input[type="radio"] {
    accent-color: #FF1493;
}
button {
    background: linear-gradient(90deg, #FF1493, #FF8C00);
    border: none;
    color: #000000;
    padding: 10px 20px;
    font-size: 1.2em;
    cursor: pointer;
    text-transform: uppercase;
    font-weight: bold;
    box-shadow: 0px 0px 10px rgba(255, 20, 147, 0.8);
}
button:hover {
    filter: brightness(1.2);
}
.footer {
    position: relative;
    margin-top: 20px;
    font-size: 1em;
    color: #000000;
    font-weight: 600;
}
.footer a {
    color: #FF1493;
    text-decoration: none;
    font-weight: bold;
}
.footer a:hover {
    text-decoration: underline;
}
</style>
</head><body>
<div class="container">
    <h1>–û—Ü–µ–Ω–∫–∞ –∑—Ä–µ–ª–æ—Å—Ç–∏ A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –°–∞–±–∏—Ä–æ–≤–∞ –í–ª–∞–¥–∏–º–∏—Ä–∞</h1>
    <form action="/" method="post">
        {% for category, metrics in score_descriptions.items() %}
            <details>
                <summary>{{ category }}</summary>
                {% for metric, desc in metrics.items() %}
                    <details>
                        <summary class="subcategory">{{ metric }}</summary>
                        <p>{{ desc["description"] | safe }}</p>
                    </details>
                    {% for score, explanation in desc["levels"].items() %}
                        <input type="radio" name="{{ metric }}" value="{{ score }}" required> {{ score }} - {{ explanation }}<br>
                    {% endfor %}
                {% endfor %}
            </details>
        {% endfor %}
        <button type="submit">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>
    </form>
</div>
<div class="animation-container">
    <h1>‚ö° "Write clean code," they said. ‚ö°<br>‚ö° "Follow best practices," they said. ‚ö°<br>‚ö° And here we are. ‚ö°</h1>
</div>
<div class="footer">
    –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω <a href="https://t.me/VladimirSabirov" target="_blank">@VladimirSabirov</a>
</div>
</body></html>"""

@app.get("/", response_class=HTMLResponse)
async def form():
    template = Template(html_template)
    return HTMLResponse(template.render(score_descriptions=score_descriptions))

@app.post("/calculate", response_class=HTMLResponse)
async def calculate(request: Request):
    form_data = await request.form()

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    try:
        scores = {metric: int(value) for metric, value in form_data.items()}
    except ValueError:
        return HTMLResponse("<h1>–û—à–∏–±–∫–∞!</h1><p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.</p>")

    final_score, category_scores, recommendations, next_steps = calculate_maturity(scores)

    result_html = """
    <h1>–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∑—Ä–µ–ª–æ—Å—Ç–∏ A/B-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h1>
    <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:</h2>
    <ul>
    """
    for category, score in category_scores.items():
        result_html += f"<li><b>{category}</b>: {score:.2f}%</li>"
    result_html += "</ul>"
    
    result_html += f"<h2>–ò—Ç–æ–≥–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {final_score}%</h2>"
    
    return HTMLResponse(result_html)